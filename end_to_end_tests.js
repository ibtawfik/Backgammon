/**
 * Created by islam on 3/21/15.
 */
describe('Backgammon', function(){
    'use strict';

    beforeEach(function () {
        browser.get('http://localhost:9000/game.html');
        browser.driver.manage().window().setSize(1280, 1024);
    });

    function getSpace(row){
        return element(by.id('e2e_test_space_' + row ));
    }

    function getPiece(row,column,player){
        return element(by.id('e2e_test_piece_' + player + '_' + row + '_' + column));
    }

    function expectPiece(row, column, player){
        if(player === 'W'){
            expect(getPiece(row,column,'W').isDisplayed()).toEqual(true);
        }else if(player === 'B'){
            expect(getPiece(row,column,'B').isDisplayed()).toEqual(true);
        }
    }

    function notExpectPiece(row, column, player){
        if(player === 'W'){
            try{
                expect(getPiece(row,column,'W').isDisplayed()).toEqual(false);
            }catch(e){
                //if there is an error then the piece was not found
                return true;
            }

        }else if(player === 'B'){
            try{
                expect(getPiece(row,column,'B').isDisplayed()).toEqual(false);
            }catch(e){
                //if there is an error then the piece was not found
                return true;
            }

        }
    }

    function expectBoard(board){
        for(var row = 0; row < 27; row++){
            for(var column = 0; column < 15; column++){
                expectPiece(row, column, board[row][column]);
            }
        }
    }

    // playMode is either: 'passAndPlay', 'playAgainstTheComputer', 'onlyAIs',
    // or a number representing the playerIndex (-2 for viewer, 0 for white player, 1 for black player, etc)
    function setMatchState(matchState, playMode) {
        browser.executeScript(function(matchStateInJson, playMode) {
            var stateService = window.e2e_test_stateService;
            stateService.setMatchState(angular.fromJson(matchStateInJson));
            stateService.setPlayMode(angular.fromJson(playMode));
            angular.element(document).scope().$apply(); // to tell angular that things changes.
        }, JSON.stringify(matchState), JSON.stringify(playMode));
    }

    function clickSpaceAndExpectPiece(row, column, player){
        getSpace(row).click();
        expectPiece(row,column,player);
    }

    function clickPiece(row,column,player){
        getPiece(row,column,player).click();
    }


    it('should have a title', function (){
        setMatchState(matchState1, 'passAndPlay');
        expect(browser.getTitle()).toEqual('Backgammon');
    });

    it('should have the inital board', function () {
        setMatchState(matchState1, 'passAndPlay');
        expectBoard(initalBoard);

    });

    it('after rolling a 1 and a 2 white can move 3 spaces', function(){

       setMatchState(matchState1, 'passAndPlay');
       clickPiece(2,0,'W');
       getSpace(5).click();
       expectPiece(5,0,'W');

    });

    it('test taking a black piece', function(){

        setMatchState(matchState2, 'passAndPlay');
        clickPiece(2,0,'W');
        getSpace(5).click();
        expectPiece(5,0,'W');
        expectPiece(26,0,'B');

    });

    it('test winning condition', function(){

        setMatchState(matchState3, 'passAndPlay');
        clickPiece(22,0,'W');
        getSpace(27).click();
        expectBoard(
            [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
                ['B', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
                ['B', 'B', 'B', 'B' , '', '', '', '', '' ,'' ,'', '','','',''],//19 7
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
                ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//13 13
                ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
                ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
                ['W', 'W', 'W', 'W' , 'W', 'W', 'W', 'W', 'W' ,'' ,'', '','','',''],//4 22
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
                ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
                ['W', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']])//opponent exits the board 27)
    });

    it('test winning condition', function(){

        setMatchState(matchState3, 'passAndPlay');
        clickPiece(22,0,'W');
        getSpace(27).click();
        expectBoard(
            [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
                ['B', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
                ['B', 'B', 'B', 'B' , '', '', '', '', '' ,'' ,'', '','','',''],//19 7
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
                ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//13 13
                ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
                ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
                ['W', 'W', 'W', 'W' , 'W', 'W', 'W', 'W', 'W' ,'' ,'', '','','',''],//4 22
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
                ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
                ['W', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']])//opponent exits the board 27)
    });


    it('Expect no change if moving to a blocked position', function(){

        setMatchState(matchState3, 'passAndPlay');
        clickPiece(22,0,'W');
        getSpace(25).click();
        expectBoard(board3);

    });

    it('test two seprate moves on a single roll', function(){

        setMatchState(matchState1, 'passAndPlay');
        clickPiece(2,0,'W');
        getSpace(3).click();
        getSpace(4).click();
        expectBoard(
            [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
                ['W', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
                ['W', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
                ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//19 7
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
                ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
                ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//13 13
                ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
                ['W', 'W', 'W', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
                ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//4 22
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
                ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']])//opponent exits the board 27);

    });

    it('test rolling doubles', function(){

        setMatchState(matchState4, 'passAndPlay');
        clickPiece(2,0,'W');
        getSpace(6).click();
        expectBoard(
            [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
                ['W', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
                ['W', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
                ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//19 7
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
                ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
                ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//13 13
                ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
                ['W', 'W', 'W', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
                ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//4 22
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
                ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']])//opponent exits the board 27);

    });


    it('test board entry', function(){

        setMatchState(matchState5, 'passAndPlay');
        clickPiece(1,0,'W');
        getSpace(6).click();
        expectBoard(
            [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
                ['B', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
                ['W', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
                ['B', 'B', 'B', 'B' , '', '', '', '', '' ,'' ,'', '','','',''],//19 7
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
                ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//13 13
                ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
                ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
                ['W', 'W', 'W', 'W' , 'W', 'W', 'W', 'W', 'W' ,'' ,'', '','','',''],//4 22
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
                ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']]);//opponent exits the board 27)//opponent exits the board 27);

    });

    it('if required to enter the board but did not then no state change', function(){

        setMatchState(matchState5, 'passAndPlay');
        clickPiece(20,0,'W');
        getSpace(23).click();
        expectBoard(
            [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
                ['W', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
                ['B', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
                ['B', 'B', 'B', 'B' , '', '', '', '', '' ,'' ,'', '','','',''],//19 7
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
                ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//13 13
                ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
                ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
                ['W', 'W', 'W', 'W' , 'W', 'W', 'W', 'W', 'W' ,'' ,'', '','','',''],//4 22
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
                ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
                ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']]);//opponent exits the board 27)//opponent exits the board 27);

    });


    var initalBoard =
        [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
        ['W', 'W', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
        ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//19 7
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
        ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
        ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//13 13
        ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
        ['W', 'W', 'W', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
        ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//4 22
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
        ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
        ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']];//opponent exits the board 27

    var board2 =
        [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
            ['W', 'W', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
            ['B', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
            ['B', 'B', 'B', 'B' , '', '', '', '', '' ,'' ,'', '','','',''],//19 7
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
            ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
            ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//13 13
            ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
            ['W', 'W', 'W', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
            ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//4 22
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
            ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']];//opponent exits the board 27

    var board3 =
        [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
            ['B', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
            ['B', 'B', 'B', 'B' , '', '', '', '', '' ,'' ,'', '','','',''],//19 7
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
            ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//13 13
            ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
            ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
            ['W', 'W', 'W', 'W' , 'W', 'W', 'W', 'W', 'W' ,'W' ,'', '','','',''],//4 22
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
            ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']];//opponent exits the board 27


    var board4 =
        [['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//opponent exists the board
            ['W', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//start game board 24   2
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//23  3
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//22  4
            ['B', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//21  5
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//20  6
            ['B', 'B', 'B', 'B' , '', '', '', '', '' ,'' ,'', '','','',''],//19 7
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//18  8
            ['B', 'B', 'B', '' , '', '', '', '', '' ,'' ,'', '','','',''],//17  9
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//16 10
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//15 11
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//14 12
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//13 13
            ['B', 'B', 'B', 'B' , 'B', '', '', '', '' ,'' ,'', '','','',''],//12 14
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//11 15
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//10 16
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//9 17
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//8 18
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//7 19
            ['W', 'W', 'W', 'W' , 'W', '', '', '', '' ,'' ,'', '','','',''],//6 20
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//5 21
            ['W', 'W', 'W', 'W' , 'W', 'W', 'W', 'W', 'W' ,'' ,'', '','','',''],//4 22
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//3 23
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//2 24
            ['B', 'B', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//end game board //1 25
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','',''],//blots taken 26
            ['', '', '', '' , '', '', '', '', '' ,'' ,'', '','','','']];//opponent exits the board 27


    var matchState1 = {
        turnIndexBeforeMove: 0,
        turnIndex: 0,
        endMatchScores: null,
        lastMove: [{setTurn:{turnIndex:0}}, {set:{key:initalBoard}}, {set:{fromDelta:[]}}, {set:{toDelta:0}}],
        lastState: {},
        currentState: {board: initalBoard, dice1: 1, dice2:2,fromDelta:[],toDelta:[]},
        lastVisibleTo: {},
        currentVisibleTo: {}
    };

    var matchState2 = {
        turnIndexBeforeMove: 1,
        turnIndex: 0,
        endMatchScores: null,
        lastMove: [{setTurn:{turnIndex:0}}, {set:{key:board2}}, {set:{fromDelta:[]}}, {set:{toDelta:0}}],
        lastState: {},
        currentState: {board: board2, dice1: 1, dice2:2,fromDelta:[],toDelta:[]},
        lastVisibleTo: {},
        currentVisibleTo: {}
    };
    var matchState3 = {
        turnIndexBeforeMove: 1,
        turnIndex: 0,
        endMatchScores: null,
        lastMove: [{setTurn:{turnIndex:0}}, {set:{key:board3}}, {set:{fromDelta:[]}}, {set:{toDelta:0}}],
        lastState: {},
        currentState: {board: board3, dice1: 3, dice2:2,fromDelta:[],toDelta:[]},
        lastVisibleTo: {},
        currentVisibleTo: {}
    };

    var matchState3 = {
        turnIndexBeforeMove: 1,
        turnIndex: 0,
        endMatchScores: null,
        lastMove: [{setTurn:{turnIndex:0}}, {set:{key:board3}}, {set:{fromDelta:[]}}, {set:{toDelta:0}}],
        lastState: {},
        currentState: {board: board3, dice1: 3, dice2:2,fromDelta:[],toDelta:[]},
        lastVisibleTo: {},
        currentVisibleTo: {}
    };

    var matchState4 = {
        turnIndexBeforeMove: 0,
        turnIndex: 0,
        endMatchScores: null,
        lastMove: [{setTurn:{turnIndex:0}}, {set:{key:initalBoard}}, {set:{fromDelta:[]}}, {set:{toDelta:0}}],
        lastState: {},
        currentState: {board: initalBoard, dice1: 1, dice2:1,fromDelta:[],toDelta:[]},
        lastVisibleTo: {},
        currentVisibleTo: {}
    };

    var matchState5 = {
        turnIndexBeforeMove: 0,
        turnIndex: 0,
        endMatchScores: null,
        lastMove: [{setTurn:{turnIndex:0}}, {set:{key:board4}}, {set:{fromDelta:[]}}, {set:{toDelta:0}}],
        lastState: {},
        currentState: {board: board4, dice1: 5, dice2:3,fromDelta:[],toDelta:[]},
        lastVisibleTo: {},
        currentVisibleTo: {}
    };


});